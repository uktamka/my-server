version: "3"

networks:
  whybinot:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24

services:
  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./app:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx/
    depends_on:
      - php8-service
      - mysql8-service
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      whybinot:
        ipv4_address: 172.20.0.3

  # php
  php8-service:
    build:
      context: .
      dockerfile: ./php/Dockerfile
      args:
        DOCKER_PHP_VERSION: "8.0"
        DOCKER_PHP_ENABLE_XDEBUG: ${DOCKER_PHP_ENABLE_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
    container_name: php8
    ports:
      - "${PHP_8_0_PORT}:9000"
    volumes:
      - ./app:/var/www/project
      - ./php/php.ini:/usr/local/etc/php/php.ini
    networks:
      whybinot:
        ipv4_address: 172.20.0.4

  # mysql
  mysql8-service:
    image: mysql:8
    container_name: mysql8
    ports:
      - "${MYSQL_8_PORT}:3306"
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql/
      - ./mysql/dump:/dump
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped # always restart unless stopped manually
    networks:
      whybinot:
        ipv4_address: 172.20.0.5

  #nodejs
  node-service:
    build:
      context: .
      dockerfile: ./node/Dockerfile
    container_name: node
    volumes:
      - ./app:/var/www/project
    working_dir: /var/www/project
    command: npm start
    networks:
      whybinot:
        ipv4_address: 172.20.0.6
